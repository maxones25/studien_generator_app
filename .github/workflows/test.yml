name: "[App] Release"

on:
  push:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      admin: ${{ steps.filter.outputs.admin }}
      study: ${{ steps.filter.outputs.study }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            admin:
              - 'backend/apps/admin/**'
              - 'backend/libs/**'
              - 'frontend/admin-app/**'
            study:
              - 'backend/apps/study/**'
              - 'backend/libs/**'
              - 'frontend/study-app/**'

  admin-tests:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.admin == 'true'
    services:
      mysql:
        image: mysql
        command:
          [
            "--character-set-server=utf8mb4",
            "--collation-server=utf8mb4_unicode_ci",
          ]
        volumes:
          - ./mysql/data:/var/lib/mysql
          - ./mysql/schema.sql:/docker-entrypoint-initdb.d/0-schema.sql
          - ./mysql/seed/dev-seed.sql:/docker-entrypoint-initdb.d/1-seed.sql
        environment:
          - MYSQL_ROOT_PASSWORD=root
          - MYSQL_DATABASE=studien_generator_app
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - name: Get Docker logs
        if: failure()
        run: docker logs database

      - name: Get latest code
        uses: actions/checkout@v2

      - name: Install packages
        working-directory: ./backend
        run: npm ci

      - name: Run unit tests
        working-directory: ./backend
        run: npm run test:admin:unit

      - name: Run integration tests
        working-directory: ./backend
        run: npm run test:admin:integration

  study-tests:
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.study == 'true'
    steps:
      - name: Run Integration Tests
        working-directory: ./backend
        run: npm run test:study:integration
